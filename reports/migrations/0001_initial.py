# Generated by Django 5.2.3 on 2025-06-23 23:24

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('elections', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PerformanceReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('metric', models.CharField(choices=[('API_RESPONSE_TIME', 'API Response Time'), ('DATABASE_QUERY_TIME', 'Database Query Time'), ('VOTE_PROCESSING_TIME', 'Vote Processing Time'), ('BLOCKCHAIN_BLOCK_TIME', 'Blockchain Block Generation Time'), ('CONCURRENT_USERS', 'Concurrent Users'), ('MEMORY_USAGE', 'Memory Usage'), ('CPU_USAGE', 'CPU Usage')], max_length=30)),
                ('value', models.FloatField()),
                ('context', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ReportSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('report_type', models.CharField(max_length=30)),
                ('frequency', models.CharField(choices=[('DAILY', 'Daily'), ('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('CUSTOM', 'Custom')], max_length=20)),
                ('schedule_config', models.JSONField()),
                ('is_active', models.BooleanField(default=True)),
                ('last_run', models.DateTimeField(blank=True, null=True)),
                ('next_run', models.DateTimeField(blank=True, null=True)),
                ('email_recipients', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('report_type', models.CharField(max_length=30)),
                ('template_config', models.JSONField()),
                ('css_styles', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='VoterReceipt',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('voter_hash', models.CharField(max_length=64)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('transaction_hash', models.CharField(max_length=64)),
                ('block_id', models.IntegerField(blank=True, null=True)),
                ('verification_code', models.CharField(max_length=20, unique=True)),
                ('verified', models.BooleanField(default=False)),
                ('receipt_pdf', models.FileField(blank=True, upload_to='receipts/')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='VotingReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('CONSTITUENCY_RESULTS', 'Constituency Results'), ('PARTY_PERFORMANCE', 'Party Performance'), ('VOTER_TURNOUT', 'Voter Turnout'), ('ELECTION_SUMMARY', 'Election Summary'), ('CANDIDATE_WISE', 'Candidate Wise Report')], max_length=30)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('report_data', models.JSONField()),
                ('pdf_file', models.FileField(blank=True, upload_to='reports/pdf/')),
                ('excel_file', models.FileField(blank=True, upload_to='reports/excel/')),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_public', models.BooleanField(default=False)),
                ('download_count', models.IntegerField(default=0)),
                ('digital_signature', models.TextField(blank=True)),
                ('verification_hash', models.CharField(blank=True, max_length=64)),
            ],
            options={
                'ordering': ['-generated_at'],
            },
        ),
        migrations.CreateModel(
            name='AuditReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(choices=[('LOGIN', 'User Login'), ('LOGOUT', 'User Logout'), ('REGISTER', 'User Registration'), ('VOTE_CAST', 'Vote Cast'), ('PROFILE_UPDATE', 'Profile Update'), ('PASSWORD_CHANGE', 'Password Change'), ('ADMIN_ACTION', 'Admin Action'), ('API_ACCESS', 'API Access'), ('BLOCKCHAIN_EVENT', 'Blockchain Event')], max_length=20)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('details', models.JSONField(blank=True, default=dict)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('election', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='elections.election')),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
    ]
