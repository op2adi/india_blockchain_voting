"""
Python script to check if Django migration files contain a Migration class
and fix any empty files.
"""
import os
import sys
from pathlib import Path

def fix_migration_file(file_path, app_name):
    """Fix an empty migration file by creating a basic structure"""
    # First determine dependencies by looking at the migration file number
    file_name = os.path.basename(file_path)
    migration_number = int(file_name.split('_')[0])
    prev_number = migration_number - 1
    
    # Assume previous migration exists with a standard naming pattern
    # This is a simplification - actual dependencies might be different
    prev_migration = f"{prev_number:04d}"
    
    # Create a basic migration file content
    content = f"""# Generated by Django 5.2.3

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ('{app_name}', '{prev_migration}_initial'),
    ]

    operations = [
        # This is a placeholder migration created to fix empty migration files
    ]
"""
    
    # Write the content to the file
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"Fixed migration file: {file_path}")

def main():
    # Get the Django project root directory
    project_root = Path.cwd()
    
    # List of app names to check
    apps = ['users', 'elections', 'blockchain', 'reports']
    
    for app in apps:
        migrations_dir = project_root / app / 'migrations'
        if not migrations_dir.exists():
            continue
            
        for migration_file in migrations_dir.glob('*.py'):
            if migration_file.name == '__init__.py':
                continue
                
            # Check file content
            content = migration_file.read_text(encoding='utf-8').strip()
            if not content:
                print(f"Found empty migration file: {migration_file}")
                fix_migration_file(migration_file, app)
            elif "class Migration" not in content:
                print(f"Migration file without Migration class: {migration_file}")
                # Assume the file was manually edited and needs fixing
                fix_migration_file(migration_file, app)

if __name__ == "__main__":
    main()
